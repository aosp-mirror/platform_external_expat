// We need to build this for both the device (as a shared library)
// and the host (as a static library for tools to use).

// *** THIS PACKAGE HAS SPECIAL LICENSING CONDITIONS.  PLEASE
//     CONSULT THE OWNERS AND opensource-licensing@google.com BEFORE
//     DEPENDING ON IT IN YOUR PROJECT. ***
package {
    default_applicable_licenses: ["external_expat_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "external_expat_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-CC0-1.0",
        "SPDX-license-identifier-GFDL", // by exception only
        "SPDX-license-identifier-MIT",
        "legacy_notice",
        "legacy_unencumbered",
    ],
    license_text: [
        "COPYING",
    ],
}

cc_library {
    name: "libexpat",
    vendor_available: true,
    product_available: true,
    vndk: {
        enabled: true,
    },
    double_loadable: true,
    host_supported: true,
    unique_host_soname: true,
    sdk_version: "9",

    srcs: [
        "lib/xmlparse.c",
        "lib/xmlrole.c",
        "lib/xmltok.c",
    ],
    cflags: [
        "-Wall",
        "-Werror",
        "-Wmissing-prototypes",
        "-Wstrict-prototypes",
        "-Wno-unused-function",
        "-Wno-unused-parameter",
        "-Wno-missing-field-initializers",
        "-DHAVE_EXPAT_CONFIG_H",
        "-UWIN32_LEAN_AND_MEAN",
    ],

    target: {
        darwin: {
            cflags: ["-fno-common"],
        },

        windows: {
            enabled: true,
        },
    },

    stl: "none",
    local_include_dirs: ["lib"],
    export_include_dirs: ["lib"],

    apex_available: [
        "//apex_available:platform",
        "com.android.art",
        "com.android.art.debug",
    ],
    min_sdk_version: "apex_inherit",
}
